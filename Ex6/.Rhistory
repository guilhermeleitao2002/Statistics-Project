cfiaa <- append(cfiaa, mean(amps))
}
data <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = data, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
data1 <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = data1, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
data <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = data, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
data <- data.frame(n, cfiaa)
ggplot(data = data, aes(x = n, y = cfiaa)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
data <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = data, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
data <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = data, aes(x = dim, y = amp)) +
geom_point(color = "blue")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
df <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = df, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
memezinha <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = memezinha, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
memezinha <- data.frame(dim <- n, amp <- cfiaa)
ggplot(data = memezinha, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
memezinha <- data.frame(dim <- n, amp <- cfiaa)
ggplot(data = memezinha, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(dim <- n, amp <- cfiaa)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(dim <- n, amp <- cfiaa)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
medias=c()
nvals <- c(n1 <- 5, n2 <- 29, n3 <- 87) #store values of n
#create samples
for(i in nvals)
{
set.seed(526)
for(j in 1:1910)
{
amostra <- runif(i, 10, 14) #temporarily storing the sample
medias<-append(medias, mean(amostra)) #adding to the average vector
}
}
#Build Histograms
ggplot() +
geom_histogram(aes(x = medias[1:1910], y = ..density..), color = "blue", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 8, sd = 4 / sqrt(12*n1)), col = "black", size = 2) +
labs(title = "Amostra para n = 5", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[1911:3820], y = ..density..), color = "yellow", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 8, sd = 4 / sqrt(12*n2)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[3821:5730], y = ..density..), color = "red", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 8, sd = 4 / sqrt(12*n3)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
library("ggplot2")
medias=c()
nvals <- c(n1 <- 5, n2 <- 29, n3 <- 87) #store values of n
#create samples
for(i in nvals)
{
set.seed(526)
for(j in 1:1910)
{
amostra <- runif(i, 10, 14) #temporarily storing the sample
medias<-append(medias, mean(amostra)) #adding to the average vector
}
}
#Build Histograms
ggplot() +
geom_histogram(aes(x = medias[1:1910], y = ..density..), color = "blue", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 12, sd = 4 / sqrt(12*n1)), col = "black", size = 2) +
labs(title = "Amostra para n = 5", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[1911:3820], y = ..density..), color = "yellow", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 12, sd = 4 / sqrt(12*n2)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[3821:5730], y = ..density..), color = "red", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 12, sd = 4 / sqrt(12*n3)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[1:1910], y = ..density..), color = "blue", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 12, sd = 4 / sqrt(12*n1)), col = "black", size = 2) +
labs(title = "Amostra para n = 5", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[1911:3820], y = ..density..), color = "yellow", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 12, sd = 4 / sqrt(12*n2)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[3821:5730], y = ..density..), color = "red", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 12, sd = 4 / sqrt(12*n3)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
