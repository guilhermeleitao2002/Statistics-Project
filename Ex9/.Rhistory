library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
alpha <- 0.03
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
diff <- upper - lower
amps<-append(amps, diff) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
set.seed(63)
amp=c()
# variáveis do enunciado
m <- 1300
n <- 1194
lambda <- 2.42
alpha <- 0.08 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
alpha <- 0.03
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
alpha <- 0.03
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library("ggplot2")
set.seed(844)
lambda <- 2.02
cfiaa <- c() #confidence interval average amplitude
alpha <- 0.03
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:600)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps))
}
av <- data.frame(
dim <- n,
amp <- cfiaa
)
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
