set.seed(917)
amostra<-rexp(492, 0.19) #Generate random distribution with given seed
FD=ecdf(amostra) #Get distribution function
ev = FD(11.0) #Empirical value
tv = pexp(11.0, rate=0.19, log=FALSE) #Theoric value
#Diference:
dif=tv-ev
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(525)
medias=c()
for(i in 1:9485)
{
amostra<-rbinom(51, 37, 0.89)
medias<-append(medias, mean(amostra))
}
#Media das medias
ve = mean(medias)
#Media teorica
vt = 37*0.89
#Diferenca
dif=vt - ve
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(1192)
amp=c()
# variáveis do enunciado
m <- 500
n <- 1192
lambda <- 2.52
alpha <- 0.03 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
set.seed(846)
amp=c()
# variáveis do enunciado
m <- 500
n <- 1192
lambda <- 2.52
alpha <- 0.03 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
set.seed(846)
amp=c()
# variáveis do enunciado
m <- 500
n <- 1192
lambda <- 2.52
alpha <- 0.03 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
set.seed(1397)
amostra<-rexp(583, 0.2) #Generate random distribution with given seed
FD=ecdf(amostra) #Get distribution function
ev = FD(8.0) #Empirical value
tv = pexp(8.0, rate=0.2, log=FALSE) #Theoric value
#Diference:
dif=tv-ev
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(745)
medias=c()
for(i in 1:5070)
{
amostra<-rbinom(27, 41, 0.78)
medias<-append(medias, mean(amostra))
}
#Media das medias
ve = mean(medias)
#Media teorica
vt = 41*0.78
#Diferenca
dif=vt - ve
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(18)
amp=c()
# variáveis do enunciado
m <- 1450
n <- 942
lambda <- 3.45
alpha <- 0.07 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
set.seed(1529)
amostra<-rexp(738, 0.37) #Generate random distribution with given seed
FD=ecdf(amostra) #Get distribution function
ev = FD(3.0) #Empirical value
tv = pexp(3.0, rate=0.37, log=FALSE) #Theoric value
#Diference:
dif=tv-ev
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(151)
medias=c()
for(i in 1:6435)
{
amostra<-rbinom(153, 1, 0.37)
medias<-append(medias, mean(amostra))
}
#Media das medias
ve = mean(medias)
#Media teorica
vt = 1*0.37
#Diferenca
dif=vt - ve
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(63)
amp=c()
# variáveis do enunciado
m <- 1300
n <- 1194
lambda <- 2.42
alpha <- 0.08 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
