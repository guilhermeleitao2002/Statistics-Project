for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lambda_mle <- 1/mean(sampleC)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lower = (mean(sampleC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
upper = (mean(sampleC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lambda_mle <- 1/mean(sampleC)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lower = (mean(sampleC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
upper = (mean(sampleC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
set.seed(403)
amostra<-rexp(355, 0.28) #Generate random distribution with given seed
FD=ecdf(amostra) #Get distribution function
ev = FD(2.0) #Empirical value
tv = pexp(2.0, rate=0.28, log=FALSE) #Theoric value
#Diference:
dif=tv-ev
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(544)
medias=c()
for(i in 1:9085)
{
amostra<-rbinom(147, 30, 0.93)
medias<-append(medias, mean(amostra))
}
#Media das medias
ve = mean(medias)
#Media teorica
vt = 30*0.93
#Diferenca
dif=vt - ve
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(747)
amp=c()
# variáveis do enunciado
m <- 500
n <- 880
lambda <- 0.52
alpha <- 0.01 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
library("ggplot2")
medias=c()
nvals <- c(n1 <- 4, n2 <- 21, n3 <- 56) #store values of n
#create samples
for(i in nvals)
{
set.seed(1119)
for(j in 1:740)
{
amostra <- runif(i, 6, 10) #temporarily storing the sample
medias<-append(medias, mean(amostra)) #adding to the average vector
}
}
#Build Histograms
ggplot() +
geom_histogram(aes(x = medias[1:740], y = ..density..), color = "blue", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 13, sd = 4 / sqrt(12*n1)), col = "black", size = 2) +
labs(title = "Amostra para n = 5", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[741:1480], y = ..density..), color = "yellow", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 13, sd = 4 / sqrt(12*n2)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[1481:2220], y = ..density..), color = "red", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 13, sd = 4 / sqrt(12*n3)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
library("ggplot2")
medias=c()
nvals <- c(n1 <- 4, n2 <- 21, n3 <- 56) #store values of n
#create samples
for(i in nvals)
{
set.seed(1119)
for(j in 1:740)
{
amostra <- runif(i, 6, 10) #temporarily storing the sample
medias<-append(medias, mean(amostra)) #adding to the average vector
}
}
#Build Histograms
ggplot() +
geom_histogram(aes(x = medias[1:740], y = ..density..), color = "blue", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 8, sd = 4 / sqrt(12*n1)), col = "black", size = 2) +
labs(title = "Amostra para n = 5", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[741:1480], y = ..density..), color = "yellow", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 8, sd = 4 / sqrt(12*n2)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
ggplot() +
geom_histogram(aes(x = medias[1481:2220], y = ..density..), color = "red", bins = 12) +
stat_function(fun = dnorm, args = list(mean = 8, sd = 4 / sqrt(12*n3)), col = "black", size = 2) +
labs(title = "Amostra para n = 29", x = "Values", y = "Density")
library("ggplot2")
set.seed(252)
lambda <- 1.94
cfiaa <- c() #confidence interval average amplitude
alpha <- 0.02
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:800)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps)) #Getting the average of the amplitudes
}
#Build Data Frame
av <- data.frame(
dim <- n,
amp <- cfiaa
)
#Build Plot
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
library(ggplot2)
set.seed(546)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.04
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:1100)
{
sampleC<-rexp(0.3*i, 0.03)           #Generate contaminated sample
sample<-rexp(0.7*i, 1.45)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lower = (mean(sampleC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
upper = (mean(sampleC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.3*i, 1.45)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lower = (mean(sampleC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
upper = (mean(sampleC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lambda_mle <- 1/mean(sampleC)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lower = (mean(sampleC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
upper = (mean(sampleC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
lower = (mean(sampleC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
upper = (mean(sampleC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non-contaminated sample
lambda_mle <- 1/mean(sample)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non-contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
sampleC<-rexp(0.2*i, 0.05)           #Generate 20% of contaminated sample
sample<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
sampleC<- append(sampleC, sample) #Finish contaminated sample
sample <- append(sample, rexp(0.2*i, 2.02)) #Finish non contaminated sample
lambda_mle <- 1/mean(sample)
lower = (mean(sampleC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
upper = (mean(sampleC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(sampleC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
amostraC<-rexp(0.2*i, 0.05)           #Generate 20% of contaminated sample
amostra<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
amostraC<- append(amostraC, amostra) #Finish contaminated sample
amostra <- append(amostra, rexp(0.2*i, 2.02)) #Finish non contaminated sample
lambda_mle <- 1/mean(amostra)
lower = (mean(amostraC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(amostraC)/i))**-1
upper = (mean(amostraC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(amostraC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
library(ggplot2)
set.seed(674)
aaNC=c()                                #Non contaminated amplitude averages
aaC=c()                                   #Contaminated amplitude averages
n <- seq(from = 100, to = 2500, by = 100) #N values
alpha <- 0.03
for(i in n)
{
amp=c()               #Non contaminated amplitudes
ampC=c()              #Contaminated amplitudes
for(j in 1:550)
{
amostraC<-rexp(0.2*i, 0.05)           #Generate 20% of contaminated sample
amostra<-rexp(0.8*i, 2.02)        #Generate 80% of non contaminated sample
amostraC<- append(amostraC, amostra) #Finish contaminated sample
amostra <- append(amostra, rexp(0.2*i, 2.02)) #Finish non contaminated sample
lambda_mle <- 1/mean(amostra)
lower = (mean(amostraC) - qnorm(alpha/2, mean = 0, sd = 1) * sqrt(var(amostraC)/i))**-1
upper = (mean(amostraC) - qnorm(1 - (alpha/2), mean = 0, sd = 1) * sqrt(var(amostraC)/i))**-1
ampC<-append(ampC, upper - lower)             #Get contaminated amplitude
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amp<-append(amp, upper - lower)               #Get non contaminated amplitude
}
aaNC<-append(aaNC, mean(amp))
aaC<-append(aaC, mean(ampC))
}
#Build Plot
ggplot()+
geom_point(aes(n, aaNC, color="Não contaminada"), size=2)+
geom_point(aes(n, aaC, color="Contaminada"), size=2)+
scale_color_manual(name="Amostra", values=c("Não contaminada"="red", "Contaminada"="blue"))+
labs(title = "Variação da amplitude de intervalos de confiança", x = "Dimensão", y = "Amplitude")
