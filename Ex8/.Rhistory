set.seed(228)
amp=c()
# variáveis do enunciado
m <- 850
n <- 823
lambda <- 177
alpha <- 0.08 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
set.seed(228)
amp=c()
# variáveis do enunciado
m <- 850
n <- 823
lambda <- 1.77
alpha <- 0.08 # não é o 1 - alpha, é o alpha
for(i in 1:m)
{
amostra<-rexp(n, lambda)                          #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(n))
amp<-append(amp, upper - lower)                    #Get amplitude
}
#Mean of the amplitudes
res=mean(amp)
#With 6 decimal places
format(round(res, 6), nsmall=6)
set.seed(701)
medias=c()
for(i in 1:7000)
{
amostra<-rbinom(83, 18, 0.15)
medias<-append(medias, mean(amostra))
}
#Media das medias
ve = mean(medias)
#Media teorica
vt = 18*0.15
#Diferenca
dif=vt - ve
#With 6 decimal places
format(round(dif, 6), nsmall=6)
set.seed(1420)
amostra<-rexp(678, 0.33) #Generate random distribution with given seed
FD=ecdf(amostra) #Get distribution function
ev = FD(2.0) #Empirical value
tv = pexp(2.0, rate=0.33, log=FALSE) #Theoric value
#Diference:
dif=tv-ev
#With 6 decimal places
format(round(dif, 6), nsmall=6)
library("ggplot2")
set.seed(941)
lambda <- 2.36
cfiaa <- c() #confidence interval average amplitude
alpha <- 0.06
n <- seq(from = 100, to = 5000, by = 100)
for(i in n)
{
amps <- c()
for(j in 1:500)
{
amostra<-rexp(i, lambda)  #Generate sample
lambda_mle <- 1/mean(amostra)
lower <- lambda_mle * (1 - (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
upper <- lambda_mle * (1 + (qnorm(1-(alpha/2), mean = 0, sd=1)) / sqrt(i))
amps<-append(amps, upper - lower) #Get amplitude (using CLT)
}
cfiaa <- append(cfiaa, mean(amps)) #Getting the average of the amplitudes
}
#Build Data Frame
av <- data.frame(
dim <- n,
amp <- cfiaa
)
#Build Plot
ggplot(data = av, aes(x = dim, y = amp)) +
geom_point(color = "blue") +
labs(x = "Dimensão", y = "Amplitude", title = "Amplitude dos intervalos de confiança em função da dimensão da amostra")
